{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-15T10:56:38.056Z",
    "end": "2023-11-15T10:56:41.029Z",
    "duration": 2973,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8e8a89f9-f776-481c-a1f1-f88a658c5fff",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ea0dbd2-2e3f-41b1-bec0-8e38a6c5f1db",
          "title": "addElementIntoLocalStorage",
          "fullFile": "C:\\Users\\frmuci\\Desktop\\seleniumDemo\\tests\\secondTest.js",
          "file": "\\tests\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add item into local storage control",
              "fullTitle": "addElementIntoLocalStorage Add item into local storage control",
              "timedOut": null,
              "duration": 1835,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"http://localhost:3000\")\nawait driver.executeScript(() => {\n    localStorage?.setItem(\"Notes\", 'test');\n});\nlet prova = await driver.executeScript(async () => {\n    return localStorage.getItem(\"Notes\")\n})\nprova.should.equal(\"test\")\nawait driver.quit()",
              "err": {},
              "uuid": "f3674ec4-7221-42ca-a6df-606c23f1d2d0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3674ec4-7221-42ca-a6df-606c23f1d2d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1835,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "45778888-b09d-4e46-94c9-fccfaceff488",
          "title": "addNewTag",
          "fullFile": "C:\\Users\\frmuci\\Desktop\\seleniumDemo\\tests\\thirthTest.js",
          "file": "\\tests\\thirthTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add item into local storage control",
              "fullTitle": "addNewTag Add item into local storage control",
              "timedOut": null,
              "duration": 2075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"http://localhost:3000\")\nawait driver.findElement(By.id(\"editTags\")).click()\nawait driver.findElement(By.id(\"addNewTag\")).sendKeys(\"Leard Selenium!\")\nawait driver.findElement(By.id(\"addNewTag\")).sendKeys(Key.RETURN)\nawait driver.findElement(By.id(\"closeEditTag\")).click()\nawait driver.findElement(By.id(\"editTags\")).click()\nawait driver.findElement(By.id(\"0\")).click()\nawait driver.findElement(By.id(\"closeEditTag\")).click()\n// await driver.quit()",
              "err": {},
              "uuid": "c744ea43-5729-4b0e-b2cb-88595a5b0f66",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c744ea43-5729-4b0e-b2cb-88595a5b0f66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2075,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "7de4c1e0-8415-4a15-b070-a41f2851657f",
          "title": "addNewNote",
          "fullFile": "C:\\Users\\frmuci\\Desktop\\seleniumDemo\\tests\\firstTest.js",
          "file": "\\tests\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add new Note",
              "fullTitle": "addNewNote successfully add new Note",
              "timedOut": null,
              "duration": 2647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate into app\nawait driver.get(\"http://localhost:3000/new\")\n//ADD LETTER INTO INPUT FIELD  \nawait driver.findElement(By.id(\"title\")).sendKeys(\"Leard Selenium\")\nawait driver.findElement(By.id(\"body\")).sendKeys(\"Leard Selenium body!\")\nawait driver.findElement(By.id(\"tags\")).click()\nawait driver.findElement(By.id(\"noTag\")).click()\nawait driver.findElement(By.id(\"addNewTag\")).sendKeys(\"Leard Selenium\")\nawait driver.findElement(By.id(\"addNewTag\")).sendKeys(Key.RETURN)\nawait driver.findElement(By.id(\"closeEditTag\")).click()\nawait driver.findElement(By.id(\"tags\")).click()\nawait driver.findElement(By.id(\"0\")).click()\nawait driver.findElement(By.className(\"btn-close\")).click()\nawait driver.findElement(By.id(\"title\")).sendKeys(Key.RETURN)\n//ASSERT\nlet controlTitle = await driver.findElement(By.id(\"card-title0\")).getText().then((value) => {\n    return value\n})\nlet controlText = await driver.findElement(By.id(\"card-text0\")).getText().then((value) => {\n    return value\n})\n//Assert con Chai should\ncontrolTitle.should.equal(\"Leard Selenium\")\ncontrolText.should.equal(\"Leard Selenium body!\")\n\n\n\nawait driver.findElement(By.id(\"editNote\")).click()\nawait driver.findElement(By.id(\"deleteTag\")).click()\nawait driver.findElement(By.id(\"title\")).sendKeys(Key.RETURN)\nawait driver.findElement(By.className(\"form-control\")).click()\nawait driver.findElement(By.className(\"form-control\")).sendKeys(\"Leard\")\nawait driver.findElement(By.id(\"0\")).click()\nawait driver.findElement(By.id(\"deleteEditedNote\")).click()\n/*\nUTILIZZANDO ASSERT strictEqual controlla se due stringhe coincidono (accetta 2 argomenti)\n     assert.strictEqual(controlTitle, \"Leard Selenium\")\n     assert.strictEqual(controlText, \"Leard Selenium body!\")\n*/\n//  CLOSE BROWSER\nawait driver.quit()",
              "err": {},
              "uuid": "f8fdb797-6455-4792-8335-98b6f28afb19",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8fdb797-6455-4792-8335-98b6f28afb19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2647,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}